spring.application.name=usermicroservice
server.port=0

#PostgreSQL
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.password=postgres
spring.datasource.username=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/arm_hunter
spring.jpa.hibernate.ddl-auto=create-drop
#Urls
url.to-user-url=http://localhost:8081/mapper/to-user
url.to-userdto-url=http://localhost:8081/mapper/to-userdto

#KAFKA
#KafkaProperties
kafka.bootstrap-servers=localhost:9092,localhost:9094
#KafkaTopicsProperties
kafka.topics.user-find-request=user.find.request
kafka.topics.user-find-response=user.find.response
kafka.topics.user-save-request=user.save.request
#PRODUCER
#UserDtoProducerFactoryProperties
user.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
user.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
user.producer.acks=all
user.producer.idempotence=true
#CONSUMER
#LongConsumerFactoryProperties
long.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
long.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
long.consumer.group-id=user.find.request.group
long.consumer.trusted-packages=by.shcherbakov.core_domain
long.consumer.value-default-type=java.lang.Long
#UserDtoConsumerFactoryProperties
userdto.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
userdto.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
userdto.consumer.group-id=user.save.request.group
userdto.consumer.trusted-packages=by.shcherbakov.core_domain
userdto.consumer.value-default-type=by.shcherbakov.core_domain.dto.UserDto